package main

import (
	"fmt"
	"github.com/beevik/ntp"
	"os"
	"time"
)

/*
=== Базовая задача ===

Создать программу печатающую точное время с использованием NTP библиотеки.Инициализировать как go module.
Использовать библиотеку https://github.com/beevik/ntp.
Написать программу печатающую текущее время / точное время с использованием этой библиотеки.

Программа должна быть оформлена с использованием как go module.
Программа должна корректно обрабатывать ошибки библиотеки: распечатывать их в STDERR и возвращать ненулевой код выхода в OS.
Программа должна проходить проверки go vet и golint.
*/

var ntpTimeFunc = ntp.Time

func main() {
	// Получаем текущее время с использованием NTP сервера
	ntpTime, err := ntp.Time("pool.ntp.org")
	if err != nil {
		// Если произошла ошибка, выводим её в STDERR и возвращаем ненулевой код выхода
		fmt.Fprintf(os.Stderr, "Ошибка получения времени с сервера NTP: %v\n", err)
		os.Exit(1)
	}

	// Печатаем точное время
	fmt.Printf("Текущее точное время: %s\n", ntpTime.Format(time.RFC3339))
}

// printNTPTime - функция для печати текущего времени с использованием NTP сервера
func printNTPTime() {
	// Получаем текущее время с использованием NTP сервера
	ntpTime, err := ntpTimeFunc("pool.ntp.org")
	if err != nil {
		// Если произошла ошибка, выводим её в STDERR и возвращаем ненулевой код выхода
		fmt.Fprintf(os.Stderr, "Ошибка получения времени с сервера NTP: %v\n", err)
		os.Exit(1)
	}

	// Печатаем точное время
	fmt.Printf("Текущее точное время: %s\n", ntpTime.Format(time.RFC3339))
}
